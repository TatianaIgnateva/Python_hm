# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
#
# 31    32         3    5    32        3    5    8    3
# 37    43         2    4    6         8    3    7    1
# 51    86        -1   64   -8
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__()
# для реализации операции сложения двух объектов класса Matrix (двух матриц).
# Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой
# матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, my_list):
        self.my_list = my_list

    '''Выбрала более красивый вывод на экран'''

    def __str__(self):
        for line in self.my_list:
            for i in line:
                print(f"{i:3}", end="")
            print()
        return ""


#    def __str__(self):
#        return '\n'.join(map(str, self.my_list))

    def __add__(self, other):
        for i in range(len(self.my_list)):
            for i_2 in range(len(other.my_list[0])):
#                print(f'{self.my_list[i][i_2] + other.my_list[i][i_2]}', end=" ")
                self.my_list[i][i_2] = self.my_list[i][i_2] + other.my_list[i][i_2]
        return Matrix.__str__(self)


my_list1 = [[3, 5, 32], [2, 4, 6], [1, 64, -8]]
my_list2 = [[3, 6, 9], [-1, 8, 6], [4, -5, 7]]

l1 = Matrix(my_list1)
l2 = Matrix(my_list2)

print(l1, '\n')
print(l2, '\n')

#print(l1 + l2)
print(l1.__add__(l2))

